## LOAD DATA ##
dat <- read.csv("~/Documents/CU AMC Fall 2017/BIOS6623/Project3Data.csv")
# Examining each variable on its own
hist(dat$age)
plot(dat$age)
# gender (1=male, 2=female)
dat$gender <- factor(dat$gender, levels = c(1,2), labels = c("male", "female"))
table(dat$gender)
# SES
hist(dat$SES)
plot(dat$SES)
# cdr
hist(dat$cdr)
plot(dat$cdr)
# blockR
hist(dat$blockR)
plot(dat$blockR)
# animals
hist(dat$animals)
plot(dat$animals)
# logmemI
hist(dat$logmemI)
plot(dat$logmemI)
# logmemII
hist(dat$logmemII)
plot(dat$logmemII)
# ageonset
hist(dat$ageonset)
plot(dat$ageonset)
# demind (dementia diagnosis? 1 = yes, 0 = no)
dat$demind <- factor(dat$demind, levels = c(0, 1), labels = c("no", "yes"))
## LOAD DATA ##
dat <- read.csv("~/Documents/CU AMC Fall 2017/BIOS6623/Project3Data.csv")
head(dat)
summary(dat)
# gender (1=male, 2=female)
dat$gender <- factor(dat$gender, levels = c(1,2), labels = c("male", "female"))
# demind (dementia diagnosis? 1 = yes, 0 = no)
dat$demind <- factor(dat$demind, levels = c(0, 1), labels = c("no", "yes"))
table(dat$demind)
# blockR
dat.br <- subset(dat, drop = c(animals, logmemI, logmemII))
# blockR
dat.br <- subset(dat, drop = c("animals", "logmemI", "logmemII"))
# blockR
dat.br <- dat[, c(1, 2, 3, 4, 5, 6, 10, 11)]
# animals
dat.an <- dat[, c(1, 2, 3, 4, 5, 7, 10, 11)]
# logmemI
dat.lm1 <- dat[, c(1, 2, 3, 4, 5, 8, 10, 11)]
# logmemII
dat.lm2 <- dat[, c(1, 2, 3, 4, 5, 9, 10, 11)]
summary(dat.br)
dat.br[1:15, ]
dat.br[1:30, ]
dat.br[1:50, ]
# Identify how many unique subjects there are (# independent sampling units)
length(unique(dat$id))
summary(dat$demind)
length(dat.br$age)
test <- unique(dat$id)
length(test)
test
numobs <- NULL
for(i in test){
numobs[i] <- length(dat.br$blockR)
}
numobs
dat.br[101, 7]
subjdattest <- subset(dat.br, id = 101)
subjdattest <- subset(dat.br, id == 101)
subjdattest.nona <- subjdattest[!is.na(dat.br$blockR),]
subjdattest.nona <- subjdattest[!is.na(subjdattest.br$blockR),]
subjdattest <- subset(dat.br, id == 101)
subjdattest.nona <- subjdattest[!is.na(subjdattest.br$blockR),]
subjdattest.nona <- subjdattest[!is.na(subjdattest$blockR),]
length(subjdattest.nona$blockR)
for(i in test){
subjdat <- subset(dat.br, id == i) # make dataset for each subject
# remove rows that have NAs in outcome
subjdat.nona <- subjdat[!is.na(subjdat$blockR), ]
# find length of outcome vector
numobs[i] <- length(subjdat.nona$blockR)
# create vector that has # of repeated measurements for each subject
}
# repeat the numobs vector to be part of the dataframe in long format
# if numobs < 3 then drop the row
numobs
numobs <- NULL
for(i in test){
subjdat <- subset(dat.br, id == i) # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
numobs[i] <- length(subjdat.nona$blockR)
# create vector that has # of repeated measurements for each subject
}
numobs <- NULL
for(i in test){
subjdat <- subset(dat.br, id == i) # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
numobs[i] <- length(subjdat$blockR)
# create vector that has # of repeated measurements for each subject
}
numobs <- vector(NULL, length = length(test))
numobs <- is.vector(NULL, length = length(test))
numobs <- is.vector(length = length(test))
numobs <- rep("NA", times = length(test))
numobs <- rep(NA, times = length(test))
numobs <- as.vector(rep(NA, times = length(test)))
for(i in test){
subjdat <- subset(dat.br, id == i) # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
numobs[i] <- length(subjdat$blockR)
# create vector that has # of repeated measurements for each subject
}
numobs <- NULL
str(test)
test <- as.vector(test)
str(test)
numobs <- NULL
for(i in unique(dat.br$id)){
subjdat <- subset(dat.br, id == i) # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
numobs[i] <- length(subjdat$blockR)
# create vector that has # of repeated measurements for each subject
}
for(i in unique(dat.br$id)){
subjdat <- subset(dat.br, id == i) # make dataset for each subject
print(length(subjdat))
# remove rows that have NAs in outcome
# find length of outcome vector
# create vector that has # of repeated measurements for each subject
}
tail(dat.br)
length(dat.br)
nrows(dat.br)
nrow(dat.br)
for(i in unique(dat.br$id)){
subjdat <- subset(dat.br, id == i) # make dataset for each subject
print(nrow(subjdat))
# remove rows that have NAs in outcome
# find length of outcome vector
# create vector that has # of repeated measurements for each subject
}
numobs <- NULL
for(i in unique(dat.br$id)){
subjdat <- subset(dat.br, id == i) # make dataset for each subject
subjdat.nona <- subjdat[!is.na(subjdat$blockR), ]
# remove rows that have NAs in outcome
# find length of outcome vector
numobs[i] <- nrow(subjdat.nona)
# create vector that has # of repeated measurements for each subject
}
subjdattest <- subset(dat.br, id == 101 & blockR != NA)
subjdattest <- subset(dat.br, id == 101 & blockR != "NA")
nrows(subjdattest)
nrow(subjdattest)
numobs <- NULL
for(i in unique(dat.br$id)){
subjdat <- subset(dat.br, id == i & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
numobs[i] <- nrow(subjdat)
# create vector that has # of repeated measurements for each subject
}
test2 <- unique(dat.br$id)
numobs <- NULL
for(i in as.vector(unique(dat.br$id))){
subjdat <- subset(dat.br, id == i & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
numobs[i] <- nrow(subjdat)
# create vector that has # of repeated measurements for each subject
}
for(i in as.vector(unique(dat.br$id))){
subjdat <- subset(dat.br, id == i & blockR != "NA") # make dataset for each subject
print(nrow(subjdat))# remove rows that have NAs in outcome
# find length of outcome vector
# create vector that has # of repeated measurements for each subject
}
for(i in as.vector(unique(dat.br$id))){
subjdat <- subset(dat.br, id == i & blockR != "NA") # make dataset for each subject
numobs <- nrow(subjdat)# remove rows that have NAs in outcome
# find length of outcome vector
# create vector that has # of repeated measurements for each subject
}
numobs <- NULL
for(i in as.vector(unique(dat.br$id))){
subjdat <- subset(dat.br, id == i & blockR != "NA") # make dataset for each subject
numobs <- nrow(subjdat)# remove rows that have NAs in outcome
# find length of outcome vector
# create vector that has # of repeated measurements for each subject
}
numobs <- NULL
for(i in as.vector(unique(dat.br$id))){
subjdat <- subset(dat.br, id == i & blockR != "NA") # make dataset for each subject
numobs[i] <- nrow(subjdat)# remove rows that have NAs in outcome
# find length of outcome vector
# create vector that has # of repeated measurements for each subject
}
for(i in as.vector(unique(dat.br$id))){
subjdat <- subset(dat.br, id == i & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
print(nrow(subjdat))
# create vector that has # of repeated measurements for each subject
}
# repeat the numobs vector to be part of the dataframe in long format
# if numobs < 3 then drop the row
range(test)
for(i in as.list(unique(dat.br$id))){
subjdat <- subset(dat.br, id == i & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
print(nrow(subjdat))
# create vector that has # of repeated measurements for each subject
}
for(n in as.vector(unique(dat.br$id))){
subjdat <- subset(dat.br, id == i & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
print(nrow(subjdat))
# create vector that has # of repeated measurements for each subject
}
for(n in c(101, 389)){
subjdat <- subset(dat.br, id == i & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
print(nrow(subjdat))
# create vector that has # of repeated measurements for each subject
}
for(n in c(101, 389)){
subjdat <- subset(dat.br, id == n & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
print(nrow(subjdat))
# create vector that has # of repeated measurements for each subject
}
for(n in unique(dat.br$id)){
subjdat <- subset(dat.br, id == n & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
print(nrow(subjdat))
# create vector that has # of repeated measurements for each subject
}
test3 <- c(101, 389)
str(test3)
str(test)
test <- as.numeric(test)
str(test)
for(n in test){
subjdat <- subset(dat.br, id == n & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
print(nrow(subjdat))
# create vector that has # of repeated measurements for each subject
}
numobs <- NULL
for(n in test){
subjdat <- subset(dat.br, id == n & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
numobs[n] <- nrow(subjdat)
# create vector that has # of repeated measurements for each subject
}
numobs <- NULL
for(n in test){
subjdat <- subset(dat.br, id == n & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
numobs[n] <- nrow(subjdat)
# create vector that has # of repeated measurements for each subject
}
numobs <- NULL
for(n in c(101, 389)){
subjdat <- subset(dat.br, id == n & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
numobs[n] <- nrow(subjdat)
# create vector that has # of repeated measurements for each subject
}
numobs <- NULL
for(n in c(101, 389)){
subjdat <- subset(dat.br, id == n & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
numobs[n] <- as.numeric(nrow(subjdat))
# create vector that has # of repeated measurements for each subject
}
for(n in c(101, 389)){
subjdat <- subset(dat.br, id == n & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
numobs <- nrow(subjdat)
# create vector that has # of repeated measurements for each subject
}
numobs
for(n in c(101, 389)){
subjdat <- subset(dat.br, id == n & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
numobs[n] <- nrow(subjdat)
# create vector that has # of repeated measurements for each subject
}
for(n in c(101, 389)){
subjdat <- subset(dat.br, id == n & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
numobs[n] <- as.numeric(nrow(subjdat))
# create vector that has # of repeated measurements for each subject
}
numobs <- as.vector(NULL, mode = "numeric")
for(n in c(101, 389)){
subjdat <- subset(dat.br, id == n & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
# find length of outcome vector
numobs[n] <- as.numeric(nrow(subjdat))
# create vector that has # of repeated measurements for each subject
}
numobs <- as.vector(NULL, mode = "numeric")
for(n in c(101, 389)){
subjdat <- subset(dat.br, id == n & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
print(nrow(subjdat))
# find length of outcome vector
numobs[n] <- as.numeric(nrow(subjdat))
# create vector that has # of repeated measurements for each subject
}
for(n in c(101, 389)){
subjdat <- subset(dat.br, id == n & blockR != "NA") # make dataset for each subject
# remove rows that have NAs in outcome
print(nrow(subjdat))
# find length of outcome vector
numobs[[n]] <- as.numeric(nrow(subjdat))
# create vector that has # of repeated measurements for each subject
}
rm(list = c(subjdat))
rm(list = c("subjdat", "subjdat.nona", "subjdattest", "subjdattest.nona", "i", "n", "numobs", "test",
"test2", "test3"))
